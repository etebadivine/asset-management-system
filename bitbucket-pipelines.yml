# This is a sample build configuration for Java (Maven).
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: maven:3.6.1

pipelines:
  default:
    - step:
        name: Maven Build
        image: maven:3.6.1
        caches:
          - maven
        script:
          - mvn clean package
          - mvn -B verify
        artifacts:
          - target/**
        services:
          - mysql
    - step:
        name: Build and Push Docker Image
        image: google/cloud-sdk:latest
        deployment: production
        script:
          - echo $GCLOUD_API_KEYFILE > ~/.gcloud-api-key.json

          - gcloud auth activate-service-account --key-file ~/.gcloud-api-key.json

          - docker login -u _json_key --password-stdin https://$DOCKER_GCR_REPO_URL < ~/.gcloud-api-key.json

          - docker build -t $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} .

          - docker tag $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} $DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$BITBUCKET_BRANCH/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT}

          - docker push $DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$BITBUCKET_BRANCH/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT}

          - gcloud container clusters get-credentials $K8s_CLUSTER_NAME --zone=$GCLOUD_ZONE --project $GCLOUD_PROJECT_ID

          # DEPLOYMENT
          - kubectl set image deployment $K8s_DEPLOYMENT_NAME $K8s_DEPLOYMENT_NAME=$DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$BITBUCKET_BRANCH/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} --record --namespace=$K8S_NAMESPACE


definitions:
  services:
    mysql:
      image: mysql:8.0
      variables:
        MYSQL_DATABASE: 'fmassets'
        MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
        MYSQL_USER: 'fmassets'
        MYSQL_PASSWORD: 'ask4help'

options:
  docker: true
